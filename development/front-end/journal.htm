<!DOCTYPE html>
<html class="no-js" lang="en-GB">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <title>Journal &#183; Matt Titchener</title>
        <meta name="description" content="" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <link rel="apple-touch-icon" href="apple-touch-icon.png">
        <!-- Place favicon.ico in the root directory -->

        <link rel="stylesheet" href="css/normalize.css" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato%3a400,700%7cHind%3a300,400,500,600,700" type="text/css" />
        <link rel="stylesheet" href="css/main.css" />
        <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
    </head>
    <body>
        <!--[if lt IE 8]>
            <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
        <![endif]-->

        <header>
            <h1><a href="front-page.htm">Matt Titchener</a></h1>
            <span>UX Designer &#x30fb; Full Stack Web Developer</span>
        </header>

        <div>
            <nav>
                <h2 class="nocontent">Main navigation</h2>
                <ul>
                    <li class="selected">Journal</li>
                    <li><a href="work.htm">Work</a></li>
                    <li><a href="about.htm">About</a></li>
                </ul>
            </nav>

            <main>
                <section class="excerpt">
                    <h2><a href="entry.htm">Indexing the HTML DOM for Fun and Profit with a Super-Long Title</a></h2>

                    <p>
                        ElasticSearch and Apache Solr were both designed as powerful, full-text search engines. But
                        what if you want to index and quickly search over <i>more structured text&#8208;based content,
                        say, the HTML DOM, across a large number of documents? We turned to</i> Lux—built on top of
                        Apache Solr and Saxon—to do just that.
                    </p>
                </section>

                <section class="excerpt">
                    <h2><a href="entry.htm">Progressive Enhancement as an Accepted Best Practice—Where Did We Go Wrong?</a></h2>

                    <p>
                        I’m sure there’s no particular moment we would all point to, but I think we’d agree that
                        progressive enhancement as a best practice has been shunned in the last number of years. This
                        is disturbing to me.
                    </p>
                </section>

                <section class="excerpt">
                    <h2><a href="entry.htm">Domain Driven Design Quickly Quickly</a></h2>

                    <p>
                        What follows are my notes I took reading Domain Driven Design Quickly—itself a summary of Eric
                        Evan’s blue book, Domain Driven Design.
                    </p>
                </section>

                <section class="excerpt">
                    <h2><a href="entry.htm">Baseline Grids for the Impatient</a></h2>

                    <p>
                        There’s a bazillion articles written about the advantages and best practices regarding baseline
                        grids. What follows is my contribution—an attempt to keep things as straightforward and simple
                        as possible.
                    </p>
                </section>
            </main>
        </div>

        <footer>
        </footer>

<!--
        <svg id="grid" width="2000" height="2000" viewbox="0.5 0.5 2000 2000" style="pointer-events: none; position: absolute; left: 0; top: 0" shape-rendering="optimizeSpeed"></svg>
        <script src="grids.js" type="text/javascript"></script>
-->
    </body>
</html>
